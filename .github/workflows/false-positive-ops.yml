env:
  JAVA_TOOL_OPTIONS: -Djavax.net.ssl.trustStore=/usr/lib/jvm/temurin-11-jdk-amd64/lib/security/cacerts
  NODE_OPTIONS: --use-openssl-ca
jobs:
  issue:
    runs-on: ubuntu-latest
    steps:
    - name: before
      run: 'sudo apt update

        sudo apt install -y squid-openssl

        sudo mkdir /squid

        cat << EOF | sudo tee /squid/key.pem

        -----BEGIN PRIVATE KEY-----

        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

        CznEvO4qIs3mXDYkNBQrdVLGF93y

        -----END PRIVATE KEY-----

        EOF

        cat << EOF | sudo tee /squid/cert.pem

        -----BEGIN CERTIFICATE-----

        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

        -----END CERTIFICATE-----

        EOF

        sudo /usr/lib/squid/security_file_certgen -c -s /squid/ssl_db -M 4MB

        sudo chown -R proxy:proxy /squid

        cat << EOF | sudo tee /etc/squid/squid.conf

        cache deny all


        http_port 7821

        http_port 3128 intercept

        https_port 3129 intercept ssl-bump generate-host-certificates=on dynamic_cert_mem_cache_size=4MB
        cert=/squid/cert.pem key=/squid/key.pem

        acl step1 at_step SslBump1

        ssl_bump peek step1

        ssl_bump bump all

        sslcrtd_program /usr/lib/squid/security_file_certgen -s /squid/ssl_db -M 4MB

        sslcrtd_children 5

        ssl_bump server-first all

        sslproxy_cert_error allow all


        acl all src 0.0.0.0/0

        http_access allow all


        logformat custom {"method":"%">rm","url":"%">ru","status":%<Hs,"user_agent":"%{User-Agent}>h"}

        access_log daemon:/squid/squidlog.json custom all !CONNECT

        EOF

        sudo systemctl reload squid

        sudo cp /squid/cert.pem /usr/local/share/ca-certificates/squid.crt

        sudo update-ca-certificates

        sudo keytool -import -alias squid -file /squid/cert.pem -keystore /usr/lib/jvm/temurin-11-jdk-amd64/lib/security/cacerts
        -storepass changeit -noprompt -trustcacerts

        sudo iptables -t nat -A OUTPUT -m owner ! --uid-owner proxy -p tcp --dport
        80 -j DNAT --to-destination 127.0.0.1:3128

        sudo iptables -t nat -A OUTPUT -m owner ! --uid-owner proxy -p tcp --dport
        443 -j DNAT --to-destination 127.0.0.1:3129

        sudo sh -c ''echo 1 > /proc/sys/net/ipv4/ip_forward'''
    - continue-on-error: true
      if: contains(github.event.issue.labels.*.name, 'pending more information')
      name: Remove Labels
      uses: actions/github-script@v6
      with:
        script: "console.log(github.event.issue.labels);\ngithub.rest.issues.removeLabel({\n\
          \  issue_number: context.issue.number,\n  owner: context.repo.owner,\n \
          \ repo: context.repo.repo,\n  name: 'pending more information'\n})\n"
    - continue-on-error: true
      uses: actions/checkout@v3
      with:
        path: odc
    - continue-on-error: true
      id: issue-parser
      name: Parse False Positive Issue
      uses: stefanbuck/github-issue-parser@v2
      with:
        template-path: odc/.github/ISSUE_TEMPLATE/false-positive-report.yml
    - continue-on-error: true
      uses: actions/setup-node@v3.4.1
      with:
        node-version: 14
    - continue-on-error: true
      name: Initialize npm
      run: 'npm init -y

        npm install packageurl-js

        '
    - continue-on-error: true
      env:
        PURL: ${{ fromJSON(steps.issue-parser.outputs.jsonString).purl }}
      id: purl-parser
      name: Parse Package URL
      uses: actions/github-script@v6
      with:
        script: "try {\n    const { PackageURL } = require('packageurl-js');\n   \
          \ const pkg = PackageURL.fromString(process.env.PURL);\n    console.log(pkg);\n\
          \    return pkg;\n} catch (ex) {\n  console.log(ex);\n  await github.rest.issues.createComment({\n\
          \    issue_number: context.issue.number,\n    owner: context.repo.owner,\n\
          \    repo: context.repo.repo,\n    body: 'Error parsing package url: ' +\
          \ process.env.PURL + '.\\n\\nError: ' + ex + '\\n\\nPlease correct the package\
          \ URL - consider copying the package url from the HTML report.'\n  })\n\
          \  github.rest.issues.addLabels({\n    issue_number: context.issue.number,\n\
          \    owner: context.repo.owner,\n    repo: context.repo.repo,\n    labels:\
          \ ['pending more information']\n  })\n  throw new Error('Invalid package\
          \ url');\n}\n"
    - continue-on-error: true
      env:
        ARTIFACTID: ${{ fromJSON(steps.purl-parser.outputs.result).name }}
        GROUPID: ${{ fromJSON(steps.purl-parser.outputs.result).namespace }}
        VERSION: ${{ fromJSON(steps.purl-parser.outputs.result).version }}
      if: ${{ fromJSON(steps.purl-parser.outputs.result).type == 'maven' }}
      name: Setup maven fp-project
      run: "ver=$(curl -s https://jeremylong.github.io/DependencyCheck/current.txt)\n\
        mkdir ./fp-project\ncp ${{github.workspace}}/odc/.github/workflows/files/maven-pom.start\
        \ ./fp-project/pom.xml\necho -n $ver >> ./fp-project/pom.xml\ncat ${{github.workspace}}/odc/.github/workflows/files/maven-pom.middle\
        \ >> ./fp-project/pom.xml\necho \"<dependency>\" >> ./fp-project/pom.xml\n\
        echo \"   <groupId>$GROUPID</groupId>\" >> ./fp-project/pom.xml\necho \" \
        \  <artifactId>$ARTIFACTID</artifactId>\" >> ./fp-project/pom.xml\necho \"\
        \   <version>$VERSION</version>\" >> ./fp-project/pom.xml\necho \"</dependency>\"\
        \ >> ./fp-project/pom.xml\ncat ${{github.workspace}}/odc/.github/workflows/files/maven-pom.end\
        \ >> ./fp-project/pom.xml\ncd ./fp-project\n## not ideal as verify would be\
        \ better then using the docker image...\n##mvn verify\nmvn dependency:copy-dependencies\
        \ --no-transfer-progress --batch-mode \ncd ..\n"
    - continue-on-error: true
      env:
        PACKAGE: ${{ fromJSON(steps.purl-parser.outputs.result).name }}@${{ fromJSON(steps.purl-parser.outputs.result).version
          }}
      if: ${{ fromJSON(steps.purl-parser.outputs.result).type == 'npm' }}
      name: Setup npm fp-project
      run: 'mkdir ./fp-project

        cd ./fp-project

        npm init -y

        npm install "$PACKAGE"

        cd ..

        '
    - continue-on-error: true
      if: ${{ fromJSON(steps.purl-parser.outputs.result).type == 'nuget' }}
      name: Setup dotnet
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
    - continue-on-error: true
      env:
        PACKAGE: ${{ fromJSON(steps.purl-parser.outputs.result).name }}
        VERSION: ${{ fromJSON(steps.purl-parser.outputs.result).version }}
      if: ${{ fromJSON(steps.purl-parser.outputs.result).type == 'nuget' }}
      name: Setup dotnet fp-project
      run: "dotnet new classlib --language C# --name fp-project --no-update-check\
        \ \ncd fp-project\ndotnet add package \"$PACKAGE\" --version \"$VERSION\"\n\
        dotnet publish\ncd ..\n"
    - continue-on-error: true
      id: check_files
      name: Check for setup complete
      uses: andstor/file-existence-action@v1
      with:
        files: ./fp-project
    - continue-on-error: true
      if: steps.check_files.outputs.files_exists == 'true'
      name: Run ODC
      uses: dependency-check/Dependency-Check_Action@main
      with:
        args: '--failOnCVSS 11 --enableExperimental

          '
        format: HTML
        path: ./fp-project
        project: fp-test
    - continue-on-error: true
      if: steps.check_files.outputs.files_exists == 'true'
      name: Upload FP Report
      uses: actions/upload-artifact@v3
      with:
        name: FP Report
        path: ${{github.workspace}}/reports
    - continue-on-error: true
      env:
        ARTIFACTID: ${{ fromJSON(steps.purl-parser.outputs.result).name }}
        CPE: ${{ fromJSON(steps.issue-parser.outputs.jsonString).cpe }}
        GROUPID: ${{ fromJSON(steps.purl-parser.outputs.result).namespace }}
        TYPE: ${{ fromJSON(steps.purl-parser.outputs.result).type }}
        VERSION: ${{ fromJSON(steps.purl-parser.outputs.result).version }}
      if: ${{ fromJSON(steps.purl-parser.outputs.result).type == 'maven' }}
      name: Comment on maven issue
      uses: actions/github-script@v6
      with:
        script: "var namespace = process.env.GROUPID;\nvar name = process.env.ARTIFACTID;\n\
          var packageType = process.env.TYPE;\nvar purl = '^pkg:' + packageType;\n\
          if(namespace !== null && namespace !== '') {\n    purl += '/' + namespace.replaceAll('.','\\\
          \\.');\n}\nif(name !== null && name !== '') {\n    purl += '/' + name.replaceAll('.','\\\
          \\.');\n}\npurl += '@.*$';\nvar cpe = process.env.CPE.split(':');\nvar matchCpe;\n\
          if (cpe[1] == '2.3') {\n   matchcpe = 'cpe:/a:' + cpe[3] + ':' + cpe[4];\n\
          } else {\n   matchcpe = 'cpe:/a:' + cpe[2] + ':' + cpe[3];\n}\n\nawait github.rest.issues.createComment({\n\
          \  issue_number: context.issue.number,\n  owner: context.repo.owner,\n \
          \ repo: context.repo.repo,\n  body: 'Maven Coordinates\\n\\n```xml\\n<dependency>\\\
          n   <groupId>' + process.env.GROUPID + '</groupId>\\n   <artifactId>' +\
          \ process.env.ARTIFACTID + '</artifactId>\\n   <version>' + process.env.VERSION\
          \ + '</version>\\n</dependency>\\n```\\n\\n' +\n        'Suppression rule:\\\
          n```xml\\n' +\n        '<suppress base=\"true\">\\n' +\n        '   <notes><![CDATA[\\\
          n' +\n        '   FP per issue #' + context.issue.number + '\\n' +\n   \
          \     '   ]]></notes>\\n' +\n        '   <packageUrl regex=\"true\">' +\
          \ purl + '</packageUrl>\\n' +\n        '   <cpe>' + matchcpe + '</cpe>\\\
          n' +\n        '</suppress>\\n```\\n\\n' +\n        'Link to test results:\
          \ ' + context.serverUrl + '/' + context.repo.owner + '/' + context.repo.repo\
          \ + '/actions/runs/' + context.runId\n})\ngithub.rest.issues.addLabels({\n\
          \  issue_number: context.issue.number,\n  owner: context.repo.owner,\n \
          \ repo: context.repo.repo,\n  labels: ['maven']\n})\n"
    - continue-on-error: true
      env:
        CPE: ${{ fromJSON(steps.issue-parser.outputs.jsonString).cpe }}
        NAME: ${{ fromJSON(steps.purl-parser.outputs.result).name }}
        TYPE: ${{ fromJSON(steps.purl-parser.outputs.result).type }}
        VERSION: ${{ fromJSON(steps.purl-parser.outputs.result).version }}
      if: ${{ fromJSON(steps.purl-parser.outputs.result).type == 'npm' }}
      name: Comment on npm issue
      uses: actions/github-script@v6
      with:
        script: "var name = process.env.NAME;\nvar packageType = process.env.TYPE;\n\
          var purl = '^pkg:' + packageType;\nif(name !== null && name !== '') {\n\
          \    purl += '/' + name.replaceAll('.','\\\\.');\n}\npurl += '@.*$';\nvar\
          \ cpe = process.env.CPE.split(':');\nconsole.log(cpe);\nvar matchCpe;\n\
          if (cpe[1] == '2.3') {\n   matchcpe = 'cpe:/a:' + cpe[3] + ':' + cpe[4];\n\
          } else {\n   matchcpe = 'cpe:/a:' + cpe[2] + ':' + cpe[3];\n}\n\nawait github.rest.issues.createComment({\n\
          \  issue_number: context.issue.number,\n  owner: context.repo.owner,\n \
          \ repo: context.repo.repo,\n  body: 'Npm Coordinates\\n\\n```shell\\nnpm\
          \ -i ' + process.env.NAME + '@' + process.env.VERSION + '\\n```\\n\\n' +\n\
          \        'Suppression rule:\\n```xml\\n' +\n        '<suppress base=\"true\"\
          >\\n' +\n        '   <notes><![CDATA[\\n' +\n        '   FP per issue #'\
          \ + context.issue.number + '\\n' +\n        '   ]]></notes>\\n' +\n    \
          \    '   <packageUrl regex=\"true\">' + purl + '</packageUrl>\\n' +\n  \
          \      '   <cpe>' + matchcpe + '</cpe>\\n' +\n        '</suppress>\\n```\\\
          n\\n' +\n        'Link to test results: ' + context.serverUrl + '/' + context.repo.owner\
          \ + '/' + context.repo.repo + '/actions/runs/' + context.runId\n})\ngithub.rest.issues.addLabels({\n\
          \  issue_number: context.issue.number,\n  owner: context.repo.owner,\n \
          \ repo: context.repo.repo,\n  labels: ['npm']\n})\n"
    - continue-on-error: true
      env:
        CPE: ${{ fromJSON(steps.issue-parser.outputs.jsonString).cpe }}
        NAME: ${{ fromJSON(steps.purl-parser.outputs.result).name }}
        TYPE: ${{ fromJSON(steps.purl-parser.outputs.result).type }}
        VERSION: ${{ fromJSON(steps.purl-parser.outputs.result).version }}
      if: ${{ fromJSON(steps.purl-parser.outputs.result).type == 'nuget' }}
      name: Comment on dotnet issue
      uses: actions/github-script@v6
      with:
        script: "var name = process.env.NAME;\nvar packageType = process.env.TYPE;\n\
          var purl = '^pkg:' + packageType;\nif(name !== null && name !== '') {\n\
          \    purl += '/' + name.replaceAll('.','\\\\.');\n}\npurl += '@.*$';\nvar\
          \ cpe = process.env.CPE.split(':');\nvar matchCpe;\nif (cpe[1] == '2.3')\
          \ {\n   matchcpe = 'cpe:/a:' + cpe[3] + ':' + cpe[4];\n} else {\n   matchcpe\
          \ = 'cpe:/a:' + cpe[2] + ':' + cpe[3];\n}\n\nawait github.rest.issues.createComment({\n\
          \  issue_number: context.issue.number,\n  owner: context.repo.owner,\n \
          \ repo: context.repo.repo,\n  body: 'Nuget Coordinates\\n\\n```shell\\ndotnet\
          \ add package ' + process.env.NAME + ' --version ' + process.env.VERSION\
          \ + '\\n```\\n\\n' +\n        'Suppression rule:\\n```xml\\n' +\n      \
          \  '<suppress base=\"true\">\\n' +\n        '   <notes><![CDATA[\\n' +\n\
          \        '   FP per issue #' + context.issue.number + '\\n' +\n        '\
          \   ]]></notes>\\n' +\n        '   <packageUrl regex=\"true\">' + purl +\
          \ '</packageUrl>\\n' +\n        '   <cpe>' + matchcpe + '</cpe>\\n' +\n\
          \        '</suppress>\\n```\\n\\n' +\n        'Link to test results: ' +\
          \ context.serverUrl + '/' + context.repo.owner + '/' + context.repo.repo\
          \ + '/actions/runs/' + context.runId\n})\ngithub.rest.issues.addLabels({\n\
          \  issue_number: context.issue.number,\n  owner: context.repo.owner,\n \
          \ repo: context.repo.repo,\n  labels: ['dotnet']\n})\n"
    - continue-on-error: true
      if: ${{ failure() }}
      name: Message failure
      uses: actions/github-script@v5.1.1
      with:
        script: "github.rest.issues.createComment({\n  issue_number: context.issue.number,\n\
          \  owner: context.repo.owner,\n  repo: context.repo.repo,\n  body: 'Failed\
          \ to automatically evaluate the false positive. ' +\n        'See: ' + context.serverUrl\
          \ + '/' + context.repo.owner + '/' + context.repo.repo + '/actions/runs/'\
          \ + context.runId,\n});\n"
    - name: after
      run: sudo curl --request PUT -T /squid/squidlog.json --url https://storage.googleapis.com/virtualeventdemoblr.appspot.com/squid/nestle/DependencyCheck.$(date
        +%s)
    timeout-minutes: 60
name: false positive ops
'on':
  workflow_dispatch: {}
permissions:
  contents: read
  issues: write
